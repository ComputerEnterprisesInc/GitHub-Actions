#
#  Author: Hari Sekhon
#  Date: 2022-01-24 16:49:38 +0000 (Mon, 24 Jan 2022)
#
#  vim:ts=2:sts=2:sw=2:et
#
#  https://github.com/HariSekhon/GitHub-Actions
#
#  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback
#
#  https://www.linkedin.com/in/harisekhon
#

# ============================================================================ #
#                 D o c k e r   B u i l d   ->   A W S   E C R
# ============================================================================ #

# Docker Build, Tag & Push to AWS ECR

---
name: Docker Build -> AWS ECR

on:
  workflow_call:
    #inputs:
    #  repo:
    #    description: The repo in ECR to push to, usually set to ${{ env.APP }}
    #    required: true
    #  aws_access_key_id:
    #    description: The AWS_ACCESS_KEY_ID, usuall set to ${{ secrets.AWS_ACCESS_KEY_ID }}
    #    required: true
    #  aws_secret_access_key:
    #    description: The AWS_SECRET_ACCESS_KEY, usuall set to ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #    required: true
    #  aws_region:
    #    description: The AWS region of the ECR repo, usually set to ${{ secrets.AWS_DEFAULT_REGION }}
    #    required: true

jobs:
  docker_build:
    name: Docker Build -> AWS ECR
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: github.ref_name == 'master' || github.ref_name == 'main' || contains(github.ref_name, 'docker')
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Generate environment variable AWS_ACCOUNT_ID
        run: echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity | jq -r .Account)" >> $GITHUB_ENV
      - name: Generate environment variable AWS_ECR_REGISTRY
        run: echo "AWS_ECR_REGISTRY=${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_DEFAULT_REGION}}.amazonaws.com" >> $GITHUB_ENV
      - name: Generate environment variable DOCKER_IMAGE
        run: echo "DOCKER_IMAGE=${{ env.AWS_ECR_REGISTRY }}/${{ env.APP }}" >> $GITHUB_ENV
      - name: Generate environment variable EPOCH
        run: echo "EPOCH=$(date --utc '+%s')" >> $GITHUB_ENV
      - name: Generate environment variable DATESTAMP
        run: echo "DATESTAMP=$(date --utc --date="@${{env.EPOCH}}" '+%FT%H%M%SZ')" >> $GITHUB_ENV
      - name: Generate environment variable TIMESTAMP
        run: echo "TIMESTAMP=$(date --utc --date="@${{env.EPOCH}}" '+%F')" >> $GITHUB_ENV

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{env.AWS_ECR_REGISTRY}}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Build & Push
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: |
            type=registry,ref=${{env.DOCKER_IMAGE}}:latest
            type=registry,ref=${{env.DOCKER_IMAGE}}:${{github.ref_name}}
            type=registry,ref=${{env.DOCKER_IMAGE}}:${{github.sha}}
          cache-to: type=inline
          tags: |
            ${{env.DOCKER_IMAGE}}:latest
            ${{env.DOCKER_IMAGE}}:${{github.ref_name}}
            ${{env.DOCKER_IMAGE}}:${{github.sha}}
            ${{env.DOCKER_IMAGE}}:${{env.EPOCH}}
            ${{env.DOCKER_IMAGE}}:${{env.DATESTAMP}}
            ${{env.DOCKER_IMAGE}}:${{env.TIMESTAMP}}
